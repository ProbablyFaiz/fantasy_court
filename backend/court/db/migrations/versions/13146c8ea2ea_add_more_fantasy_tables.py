"""Add more fantasy tables

Revision ID: 13146c8ea2ea
Revises: 177b39a4992e
Create Date: 2025-10-17 22:56:55.889124

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "13146c8ea2ea"
down_revision: str | None = "177b39a4992e"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "provenances",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("task_name", sa.String(), nullable=False),
        sa.Column("creator_name", sa.String(), nullable=False),
        sa.Column("record_type", sa.String(), nullable=False),
        sa.Column("created_at", postgresql.TIMESTAMP(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_provenances_created_at"), "provenances", ["created_at"], unique=False
    )
    op.create_index(
        op.f("ix_provenances_creator_name"),
        "provenances",
        ["creator_name"],
        unique=False,
    )
    op.create_index(
        op.f("ix_provenances_record_type"), "provenances", ["record_type"], unique=False
    )
    op.create_index(
        op.f("ix_provenances_task_name"), "provenances", ["task_name"], unique=False
    )
    op.create_table(
        "episode_transcripts",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("episode_id", sa.Integer(), nullable=False),
        sa.Column(
            "transcript_json", postgresql.JSONB(astext_type=sa.Text()), nullable=False
        ),
        sa.Column("created_at", postgresql.TIMESTAMP(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(["episode_id"], ["podcast_episodes.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_episode_transcripts_created_at"),
        "episode_transcripts",
        ["created_at"],
        unique=False,
    )
    op.create_table(
        "fantasy_court_segments",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("episode_id", sa.Integer(), nullable=False),
        sa.Column("start_time", sa.Float(), nullable=False),
        sa.Column("end_time", sa.Float(), nullable=False),
        sa.Column("created_at", postgresql.TIMESTAMP(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(["episode_id"], ["podcast_episodes.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_fantasy_court_segments_created_at"),
        "fantasy_court_segments",
        ["created_at"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_fantasy_court_segments_created_at"),
        table_name="fantasy_court_segments",
    )
    op.drop_table("fantasy_court_segments")
    op.drop_index(
        op.f("ix_episode_transcripts_created_at"), table_name="episode_transcripts"
    )
    op.drop_table("episode_transcripts")
    op.drop_index(op.f("ix_provenances_task_name"), table_name="provenances")
    op.drop_index(op.f("ix_provenances_record_type"), table_name="provenances")
    op.drop_index(op.f("ix_provenances_creator_name"), table_name="provenances")
    op.drop_index(op.f("ix_provenances_created_at"), table_name="provenances")
    op.drop_table("provenances")
    # ### end Alembic commands ###
