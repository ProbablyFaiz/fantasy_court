// This file is auto-generated by @hey-api/openapi-ts

/**
 * CaseItem
 * Case in list views or as related object.
 */
export type CaseItem = {
    /**
     * Id
     */
    id: number;
    /**
     * Docket Number
     */
    docket_number: string;
    /**
     * Case Caption
     */
    case_caption: string | null;
    /**
     * Fact Summary
     */
    fact_summary: string;
    /**
     * Questions Presented Html
     */
    questions_presented_html: string | null;
    /**
     * Procedural Posture
     */
    procedural_posture: string | null;
    /**
     * Case Topics
     */
    case_topics: Array<string> | null;
    /**
     * Start Time S
     */
    start_time_s: number;
    /**
     * End Time S
     */
    end_time_s: number;
    episode: EpisodeItem;
};

/**
 * CaseRead
 * Full case with episode and opinion.
 */
export type CaseRead = {
    /**
     * Id
     */
    id: number;
    /**
     * Docket Number
     */
    docket_number: string;
    /**
     * Case Caption
     */
    case_caption: string | null;
    /**
     * Fact Summary
     */
    fact_summary: string;
    /**
     * Questions Presented Html
     */
    questions_presented_html: string | null;
    /**
     * Procedural Posture
     */
    procedural_posture: string | null;
    /**
     * Case Topics
     */
    case_topics: Array<string> | null;
    /**
     * Start Time S
     */
    start_time_s: number;
    /**
     * End Time S
     */
    end_time_s: number;
    episode: EpisodeItem;
    opinion: OpinionItemOutput | null;
    /**
     * Cases Cited
     */
    cases_cited: Array<CitedCaseItem>;
    /**
     * Cases Citing
     */
    cases_citing: Array<CitedCaseItem>;
};

/**
 * CitedCaseItem
 * Minimal case information for citations.
 */
export type CitedCaseItem = {
    /**
     * Id
     */
    id: number;
    /**
     * Docket Number
     */
    docket_number: string;
    /**
     * Case Caption
     */
    case_caption: string | null;
    /**
     * Episode Id
     */
    episode_id: number;
};

/**
 * EpisodeItem
 * Episode in list views.
 */
export type EpisodeItem = {
    /**
     * Id
     */
    id: number;
    /**
     * Guid
     */
    guid: string;
    /**
     * Title
     */
    title: string;
    /**
     * Description Html
     */
    description_html: string | null;
    /**
     * Pub Date
     */
    pub_date: Date;
    /**
     * Duration Seconds
     */
    duration_seconds: number | null;
    /**
     * Bucket Mp3 Public Url
     */
    bucket_mp3_public_url: string | null;
};

/**
 * EpisodeRead
 * Full episode with related cases.
 */
export type EpisodeRead = {
    /**
     * Id
     */
    id: number;
    /**
     * Guid
     */
    guid: string;
    /**
     * Title
     */
    title: string;
    /**
     * Description Html
     */
    description_html: string | null;
    /**
     * Pub Date
     */
    pub_date: Date;
    /**
     * Duration Seconds
     */
    duration_seconds: number | null;
    /**
     * Bucket Mp3 Public Url
     */
    bucket_mp3_public_url: string | null;
    /**
     * Fantasy Court Cases
     */
    fantasy_court_cases: Array<CaseItem>;
};

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * OpinionItem
 * Opinion in list views.
 */
export type OpinionItemInput = {
    /**
     * Id
     */
    id: number;
    /**
     * Authorship Html
     */
    authorship_html: string;
    /**
     * Holding Statement Html
     */
    holding_statement_html: string;
    /**
     * Reasoning Summary Html
     */
    reasoning_summary_html: string;
    /**
     * Pdf Path
     */
    pdf_path: string | null;
    case: CaseItem;
};

/**
 * OpinionItem
 * Opinion in list views.
 */
export type OpinionItemOutput = {
    /**
     * Id
     */
    id: number;
    /**
     * Authorship Html
     */
    authorship_html: string;
    /**
     * Holding Statement Html
     */
    holding_statement_html: string;
    /**
     * Reasoning Summary Html
     */
    reasoning_summary_html: string;
    /**
     * Pdf Path
     */
    pdf_path: string | null;
    case: CaseItem;
};

/**
 * OpinionRead
 * Full opinion with complete body and case context.
 */
export type OpinionRead = {
    /**
     * Id
     */
    id: number;
    /**
     * Authorship Html
     */
    authorship_html: string;
    /**
     * Holding Statement Html
     */
    holding_statement_html: string;
    /**
     * Reasoning Summary Html
     */
    reasoning_summary_html: string;
    /**
     * Pdf Path
     */
    pdf_path: string | null;
    /**
     * Opinion Body Html
     */
    opinion_body_html: string;
    case: CaseRead;
};

/**
 * PaginatedBase[CaseItem]
 */
export type PaginatedBaseCaseItem = {
    /**
     * Items
     */
    items: Array<CaseItem>;
    /**
     * Total
     */
    total: number;
    /**
     * Page
     */
    page: number;
    /**
     * Size
     */
    size: number;
    /**
     * Next Page
     */
    next_page: number | null;
    /**
     * Num Pages
     */
    readonly num_pages: number;
};

/**
 * PaginatedBase[EpisodeItem]
 */
export type PaginatedBaseEpisodeItem = {
    /**
     * Items
     */
    items: Array<EpisodeItem>;
    /**
     * Total
     */
    total: number;
    /**
     * Page
     */
    page: number;
    /**
     * Size
     */
    size: number;
    /**
     * Next Page
     */
    next_page: number | null;
    /**
     * Num Pages
     */
    readonly num_pages: number;
};

/**
 * PaginatedBase[OpinionItem]
 */
export type PaginatedBaseOpinionItem = {
    /**
     * Items
     */
    items: Array<OpinionItemOutput>;
    /**
     * Total
     */
    total: number;
    /**
     * Page
     */
    page: number;
    /**
     * Size
     */
    size: number;
    /**
     * Next Page
     */
    next_page: number | null;
    /**
     * Num Pages
     */
    readonly num_pages: number;
};

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

export type HealthHealthGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/health';
};

export type HealthHealthGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ErrorErrorGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/error';
};

export type ErrorErrorGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ListEpisodesData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Search
         */
        search?: string | null;
        /**
         * Page
         */
        page?: number;
        /**
         * Limit
         */
        limit?: number;
    };
    url: '/episodes';
};

export type ListEpisodesErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ListEpisodesError = ListEpisodesErrors[keyof ListEpisodesErrors];

export type ListEpisodesResponses = {
    /**
     * Successful Response
     */
    200: PaginatedBaseEpisodeItem;
};

export type ListEpisodesResponse = ListEpisodesResponses[keyof ListEpisodesResponses];

export type ReadEpisodeData = {
    body?: never;
    path: {
        /**
         * Episode Id
         */
        episode_id: number;
    };
    query?: never;
    url: '/episodes/{episode_id}';
};

export type ReadEpisodeErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ReadEpisodeError = ReadEpisodeErrors[keyof ReadEpisodeErrors];

export type ReadEpisodeResponses = {
    /**
     * Successful Response
     */
    200: EpisodeRead;
};

export type ReadEpisodeResponse = ReadEpisodeResponses[keyof ReadEpisodeResponses];

export type ListCasesData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Episode Id
         */
        episode_id?: number | null;
        /**
         * Search
         */
        search?: string | null;
        /**
         * Page
         */
        page?: number;
        /**
         * Limit
         */
        limit?: number;
    };
    url: '/cases';
};

export type ListCasesErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ListCasesError = ListCasesErrors[keyof ListCasesErrors];

export type ListCasesResponses = {
    /**
     * Successful Response
     */
    200: PaginatedBaseCaseItem;
};

export type ListCasesResponse = ListCasesResponses[keyof ListCasesResponses];

export type ReadCaseData = {
    body?: never;
    path: {
        /**
         * Case Id
         */
        case_id: number;
    };
    query?: never;
    url: '/cases/{case_id}';
};

export type ReadCaseErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ReadCaseError = ReadCaseErrors[keyof ReadCaseErrors];

export type ReadCaseResponses = {
    /**
     * Successful Response
     */
    200: CaseRead;
};

export type ReadCaseResponse = ReadCaseResponses[keyof ReadCaseResponses];

export type ListOpinionsData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Search
         */
        search?: string | null;
        /**
         * Page
         */
        page?: number;
        /**
         * Limit
         */
        limit?: number;
    };
    url: '/opinions';
};

export type ListOpinionsErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ListOpinionsError = ListOpinionsErrors[keyof ListOpinionsErrors];

export type ListOpinionsResponses = {
    /**
     * Successful Response
     */
    200: PaginatedBaseOpinionItem;
};

export type ListOpinionsResponse = ListOpinionsResponses[keyof ListOpinionsResponses];

export type ReadOpinionData = {
    body?: never;
    path: {
        /**
         * Opinion Id
         */
        opinion_id: number;
    };
    query?: never;
    url: '/opinions/{opinion_id}';
};

export type ReadOpinionErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ReadOpinionError = ReadOpinionErrors[keyof ReadOpinionErrors];

export type ReadOpinionResponses = {
    /**
     * Successful Response
     */
    200: OpinionRead;
};

export type ReadOpinionResponse = ReadOpinionResponses[keyof ReadOpinionResponses];

export type ReadOpinionHtmlData = {
    body?: never;
    path: {
        /**
         * Opinion Id
         */
        opinion_id: number;
    };
    query?: never;
    url: '/opinions/{opinion_id}/html';
};

export type ReadOpinionHtmlErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ReadOpinionHtmlError = ReadOpinionHtmlErrors[keyof ReadOpinionHtmlErrors];

export type ReadOpinionHtmlResponses = {
    /**
     * Successful Response
     */
    200: string;
};

export type ReadOpinionHtmlResponse = ReadOpinionHtmlResponses[keyof ReadOpinionHtmlResponses];

export type ClientOptions = {
    baseURL: 'http://localhost:8203' | (string & {});
};
