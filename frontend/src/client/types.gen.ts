// This file is auto-generated by @hey-api/openapi-ts

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * PaginatedBase[TaskListItem]
 */
export type PaginatedBaseTaskListItem = {
    /**
     * Items
     */
    items: Array<TaskListItem>;
    /**
     * Total
     */
    total: number;
    /**
     * Page
     */
    page: number;
    /**
     * Size
     */
    size: number;
    /**
     * Next Page
     */
    next_page: number | null;
    /**
     * Num Pages
     */
    readonly num_pages: number;
};

/**
 * TaskCreate
 */
export type TaskCreate = {
    /**
     * Title
     */
    title: string;
    /**
     * Description
     */
    description?: string | null;
    priority?: TaskPriority;
};

/**
 * TaskListItem
 */
export type TaskListItem = {
    /**
     * Id
     */
    id: number;
    /**
     * Title
     */
    title: string;
    /**
     * Completed
     */
    completed: boolean;
    priority: TaskPriority;
    /**
     * Description
     */
    description: string | null;
    /**
     * Created At
     */
    created_at: Date;
    /**
     * Updated At
     */
    updated_at: Date;
};

/**
 * TaskPriority
 */
export type TaskPriority = 'LOW' | 'MEDIUM' | 'HIGH';

/**
 * TaskPriority
 */
export const TaskPriority = {
    LOW: 'LOW',
    MEDIUM: 'MEDIUM',
    HIGH: 'HIGH'
} as const;

/**
 * TaskRead
 */
export type TaskRead = {
    /**
     * Id
     */
    id: number;
    /**
     * Title
     */
    title: string;
    /**
     * Completed
     */
    completed: boolean;
    priority: TaskPriority;
    /**
     * Description
     */
    description: string | null;
    /**
     * Created At
     */
    created_at: Date;
    /**
     * Updated At
     */
    updated_at: Date;
};

/**
 * TaskUpdate
 */
export type TaskUpdate = {
    /**
     * Title
     */
    title?: string | null;
    /**
     * Description
     */
    description?: string | null;
    /**
     * Completed
     */
    completed?: boolean | null;
    priority?: TaskPriority | null;
};

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

export type ListTasksData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Completed
         */
        completed?: boolean | null;
        /**
         * Priority
         */
        priority?: TaskPriority | null;
        /**
         * Search
         */
        search?: string | null;
        /**
         * Page
         */
        page?: number;
        /**
         * Limit
         */
        limit?: number;
    };
    url: '/tasks';
};

export type ListTasksErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ListTasksError = ListTasksErrors[keyof ListTasksErrors];

export type ListTasksResponses = {
    /**
     * Successful Response
     */
    200: PaginatedBaseTaskListItem;
};

export type ListTasksResponse = ListTasksResponses[keyof ListTasksResponses];

export type CreateTaskData = {
    body: TaskCreate;
    path?: never;
    query?: never;
    url: '/tasks';
};

export type CreateTaskErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateTaskError = CreateTaskErrors[keyof CreateTaskErrors];

export type CreateTaskResponses = {
    /**
     * Successful Response
     */
    200: TaskRead;
};

export type CreateTaskResponse = CreateTaskResponses[keyof CreateTaskResponses];

export type DeleteTaskData = {
    body?: never;
    path: {
        /**
         * Task Id
         */
        task_id: number;
    };
    query?: never;
    url: '/tasks/{task_id}';
};

export type DeleteTaskErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteTaskError = DeleteTaskErrors[keyof DeleteTaskErrors];

export type DeleteTaskResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type DeleteTaskResponse = DeleteTaskResponses[keyof DeleteTaskResponses];

export type ReadTaskData = {
    body?: never;
    path: {
        /**
         * Task Id
         */
        task_id: number;
    };
    query?: never;
    url: '/tasks/{task_id}';
};

export type ReadTaskErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ReadTaskError = ReadTaskErrors[keyof ReadTaskErrors];

export type ReadTaskResponses = {
    /**
     * Successful Response
     */
    200: TaskRead;
};

export type ReadTaskResponse = ReadTaskResponses[keyof ReadTaskResponses];

export type UpdateTaskData = {
    body: TaskUpdate;
    path: {
        /**
         * Task Id
         */
        task_id: number;
    };
    query?: never;
    url: '/tasks/{task_id}';
};

export type UpdateTaskErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateTaskError = UpdateTaskErrors[keyof UpdateTaskErrors];

export type UpdateTaskResponses = {
    /**
     * Successful Response
     */
    200: TaskRead;
};

export type UpdateTaskResponse = UpdateTaskResponses[keyof UpdateTaskResponses];

export type ClientOptions = {
    baseURL: 'http://localhost:8101' | (string & {});
};
