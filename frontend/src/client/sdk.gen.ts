// This file is auto-generated by @hey-api/openapi-ts

import type { Client, Options as ClientOptions, TDataShape } from '@hey-api/client-axios';
import { client as _heyApiClient } from './client.gen';
import { createTaskResponseTransformer, listTasksResponseTransformer, readTaskResponseTransformer, updateTaskResponseTransformer } from './transformers.gen';
import type { CreateTaskData, CreateTaskErrors, CreateTaskResponses, DeleteTaskData, DeleteTaskErrors, DeleteTaskResponses, ListTasksData, ListTasksErrors, ListTasksResponses, ReadTaskData, ReadTaskErrors, ReadTaskResponses, UpdateTaskData, UpdateTaskErrors, UpdateTaskResponses } from './types.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export class Default {
    /**
     * List Tasks
     */
    public static listTasks<ThrowOnError extends boolean = false>(options?: Options<ListTasksData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<ListTasksResponses, ListTasksErrors, ThrowOnError>({
            responseType: 'json',
            responseTransformer: listTasksResponseTransformer,
            url: '/tasks',
            ...options
        });
    }

    /**
     * Create Task
     */
    public static createTask<ThrowOnError extends boolean = false>(options: Options<CreateTaskData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<CreateTaskResponses, CreateTaskErrors, ThrowOnError>({
            responseType: 'json',
            responseTransformer: createTaskResponseTransformer,
            url: '/tasks',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }

    /**
     * Delete Task
     */
    public static deleteTask<ThrowOnError extends boolean = false>(options: Options<DeleteTaskData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).delete<DeleteTaskResponses, DeleteTaskErrors, ThrowOnError>({
            url: '/tasks/{task_id}',
            ...options
        });
    }

    /**
     * Read Task
     */
    public static readTask<ThrowOnError extends boolean = false>(options: Options<ReadTaskData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<ReadTaskResponses, ReadTaskErrors, ThrowOnError>({
            responseType: 'json',
            responseTransformer: readTaskResponseTransformer,
            url: '/tasks/{task_id}',
            ...options
        });
    }

    /**
     * Update Task
     */
    public static updateTask<ThrowOnError extends boolean = false>(options: Options<UpdateTaskData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).patch<UpdateTaskResponses, UpdateTaskErrors, ThrowOnError>({
            responseType: 'json',
            responseTransformer: updateTaskResponseTransformer,
            url: '/tasks/{task_id}',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
}
